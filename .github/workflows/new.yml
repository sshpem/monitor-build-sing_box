name: Build and Release sing-box

on:
  schedule:
    - cron: '0 * * * *' # Run every hour
  workflow_dispatch: # Allow manual trigger

jobs:
  check_latest_release:
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.get_latest_tag.outputs.tag }}
      new_release: ${{ steps.check_new_release.outputs.new_release }}
    steps:
      - name: Get latest stable release of SagerNet/sing-box
        id: get_latest_tag
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases | jq -r '[.[] | select(.prerelease == false)][0].tag_name')
          echo "Latest stable release: $LATEST_TAG"
          echo "tag=$LATEST_TAG" >> $GITHUB_ENV
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Check if a new release is available
        id: check_new_release
        run: |
          PREV_TAG=$(cat last_checked_tag.txt 2>/dev/null || echo "")
          echo "Previous checked version: $PREV_TAG"
          if [[ "$LATEST_TAG" != "$PREV_TAG" ]]; then
            echo "New release detected: $LATEST_TAG"
            echo "$LATEST_TAG" > last_checked_tag.txt
            echo "new_release=true" >> $GITHUB_OUTPUT
          else
            echo "No new release available"
            echo "new_release=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check_latest_release
    if: needs.check_latest_release.outputs.new_release == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: linux-armv7
            goos: linux
            goarch: arm
            goarm: 7
          - name: linux-mipsel-softfloat
            goos: linux
            goarch: mipsle
            gomips: softfloat
          - name: linux-mipsel-hardfloat
            goos: linux
            goarch: mipsle
            gomips: hardfloat
          - name: freebsd-amd64
            goos: freebsd
            goarch: amd64
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      GOMIPS: ${{ matrix.gomips }}
      CGO_ENABLED: 0
    steps:
      - name: Clone sing-box repository
        run: git clone --depth 1 --branch ${{ needs.check_latest_release.outputs.latest_tag }} https://github.com/SagerNet/sing-box.git

      - name: Set up Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build sing-box
        run: |
          cd sing-box
          echo "Building: ${{ matrix.name }}"
          make
          OUTPUT_FILE="sing-box-${{ needs.check_latest_release.outputs.latest_tag }}-${{ matrix.name }}.tar.gz"
          mkdir -p ../build
          tar -zcvf ../build/$OUTPUT_FILE sing-box
          rm -rf sing-box

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.name }}
          path: ./build/*.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.check_latest_release.outputs.latest_tag }}
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
